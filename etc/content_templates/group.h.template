//
// %%INTRO%%
//
// Copyright (C) %%COPYRIGHT%%
//
// %%LICENSE%%
//
//----------------------------------------------------------------------
/*!\file    %%FILE%%
 *
 * \author  %%AUTHOR%%
 *
 * \date    %%DATE%%
 *
 * \brief Contains g%%NAME%%
 *
 * \b g%%NAME%%
 *
 * %%DESCRIPTION%%
 *
 */
//----------------------------------------------------------------------
#ifndef %%SENTINEL%%
#define %%SENTINEL%%

#include "plugins/ib2c/tGroup.h"

//----------------------------------------------------------------------
// External includes (system with <>, local with "")
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Internal includes with ""
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Namespace declaration
//----------------------------------------------------------------------
%%OPEN_NAMESPACE%%

//----------------------------------------------------------------------
// Forward declarations / typedefs / enums
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Class declaration
//----------------------------------------------------------------------
//! %%SHORT_DESCRIPTION%%
/*!
 * %%DESCRIPTION%%
 */
class gbb%%NAME%% : public ib2c::tGroup
{
  static core::tStandardCreateModuleAction<gbb%%NAME%%> cCREATE_ACTION;

//----------------------------------------------------------------------
// Ports (These are the only variables that may be declared public)
//----------------------------------------------------------------------
public:

  tInput<> input_1;
  tInput<> input_2;

  tOutput<> output_1;
  tOutput<> output_2;

//----------------------------------------------------------------------
// Public methods and typedefs
//----------------------------------------------------------------------
public:

  gbb%%NAME%%(core::tFrameworkElement *parent, const util::tString &name = "%%NAME%%",
      %%INDENT_ONE_NAME%%const finroc::util::tString &structure_config_file = __FILE__".xml");

};

//----------------------------------------------------------------------
// End of namespace declaration
//----------------------------------------------------------------------
%%CLOSE_NAMESPACE%%
%%INCLUDE_HPP%%

#endif
