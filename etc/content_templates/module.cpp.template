//
// %%INTRO%%
//
// Copyright (C) %%COPYRIGHT%%
//
// %%LICENSE%%
//
//----------------------------------------------------------------------
/*!\file    %%FILE%%
 *
 * \author  %%AUTHOR%%
 *
 * \date    %%DATE%%
 *
 */
//----------------------------------------------------------------------
#include "%%HEADER_PATH%%"

//----------------------------------------------------------------------
// External includes (system with <>, local with "")
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Internal includes with ""
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Debugging
//----------------------------------------------------------------------
#include <cassert>

//----------------------------------------------------------------------
// Namespace usage
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Namespace declaration
//----------------------------------------------------------------------
%%OPEN_NAMESPACE%%

//----------------------------------------------------------------------
// Forward declarations / typedefs / enums
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Const values
//----------------------------------------------------------------------
core::tStandardCreateModuleAction<mbb%%NAME%%> mbb%%NAME%%::cCREATE_ACTION("%%NAME%%");

//----------------------------------------------------------------------
// Implementation
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// mbb%%NAME%% constructor
//----------------------------------------------------------------------
mbb%%NAME%%::mbb%%NAME%%(core::tFrameworkElement *parent, const util::tString &name) :
  ib2c::tModule(parent, name),
  If you have some member variables, please initialize them here. Especially built-in types (like pointers!). Delete this line otherwise!
{}

//----------------------------------------------------------------------
// mbb%%NAME%% destructor
//----------------------------------------------------------------------
mbb%%NAME%%::~mbb%%NAME%%()
{}

//----------------------------------------------------------------------
// mbb%%NAME%% EvaluateStaticParameters
//----------------------------------------------------------------------
void mbb%%NAME%%::EvaluateStaticParameters()
{
  if (this->static_parameter_1.HasChanged())
  {
    As this static parameter has changed, do something with its value!
  }
}

//----------------------------------------------------------------------
// mbb%%NAME%% EvaluateParameters
//----------------------------------------------------------------------
void mbb%%NAME%%::EvaluateParameters()
{
  tModule::EvaluateParameters();

  Add handling of your own parameters here.
  If this method is called, at least on of our parameters has changed. However, each can be checked using its .HasChanged() method.
}

//----------------------------------------------------------------------
// mbb%%NAME%% ProcessTransferFunction
//----------------------------------------------------------------------
bool mbb%%NAME%%::ProcessTransferFunction(double activation)
{
  Use your input and output ports to transfer data through this module.
  Return whether this transfer was successful or not.
}

//----------------------------------------------------------------------
// mbb%%NAME%% CalculateActivity
//----------------------------------------------------------------------
tActivity mbb%%NAME%%::CalculateActivity(std::vector<tActivity> &derived_activity, double activation) const
{
  Return a meaningful activity value here. You also want to set the derived activity vector, if you registered derived activities e.g. in the constructor.
}

//----------------------------------------------------------------------
// mbb%%NAME%% CalculateTargetRating
//----------------------------------------------------------------------
tTargetRating mbb%%NAME%%::CalculateTargetRating(double activation) const
{
  Return a meaningful target rating here. Choosing 0.5 just because you have no better idea is not "meaningful"!
  If you do not want to use the activation in this calculation remove its name to rid of the warning.
}

//----------------------------------------------------------------------
// End of namespace declaration
//----------------------------------------------------------------------
%%CLOSE_NAMESPACE%%
